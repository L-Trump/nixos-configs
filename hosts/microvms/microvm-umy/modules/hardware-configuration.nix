# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/profiles/qemu-guest.nix")
  ];

  boot.supportedFilesystems = [
    "ext4"
    "btrfs"
    "xfs"
    "ntfs"
    "fat"
    "vfat"
    "exfat"
  ];

  microvm = {
    hypervisor = "qemu";
    graphics.enable = true;
    vcpu = 2; # 2c2g
    mem = 2000;
    qemu.extraArgs = [
      "-display"
      "egl-headless,gl=on"
      "-vnc"
      ":10"
      "-vga"
      "qxl"
      "-device"
      "virtio-keyboard"
      "-usb"
      "-device"
      "usb-tablet,bus=usb-bus.0"
      # "-audiodev"
      # "pipewire,id=auddev0"
      # "-device"
      # "intel-hda"
      # "-device"
      # "hda-output,audiodev=auddev0"
    ];
    # NEW! User type network
    interfaces = [
      {
        type = "tap";
        id = "microvm-umy";
        mac = "02:00:00:01:01:01";
      }
    ];
    shares = [
      {
        source = "/nix/store";
        mountPoint = "/nix/.ro-store";
        tag = "ro-store";
      }
    ];
    writableStoreOverlay = "/nix/.rw-store";
    volumes = [
      {
        image = "root-overlay.img";
        mountPoint = "/";
        fsType = "btrfs";
        size = 20480; # 20GiB
      }
    ];
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eth0.useDHCP = lib.mkDefault true;

  # nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
