# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/profiles/qemu-guest.nix")
    ];

  boot.initrd.availableKernelModules = [ "ahci" "ata_piix" "uhci_hcd" "virtio_pci" "virtio_blk" "xen_blkfront" "vmw_pvscsi" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];
  boot.loader.grub = {
    enable = true;
    device = "/dev/vda";
    efiSupport = true;
  };
  boot.loader.efi = {
    canTouchEfiVariables = true;
    efiSysMountPoint = "/boot/efi";
  };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/21cd3737-5f09-404f-9d22-82f226e7346d";
      fsType = "btrfs";
      options = [ "subvol=@root" ];
    };

  fileSystems."/btrfs-root" =
    { device = "/dev/disk/by-uuid/21cd3737-5f09-404f-9d22-82f226e7346d";
      fsType = "btrfs";
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/21cd3737-5f09-404f-9d22-82f226e7346d";
      fsType = "btrfs";
      options = [ "subvol=@nix" ];
    };

  fileSystems."/snapshots" =
    { device = "/dev/disk/by-uuid/21cd3737-5f09-404f-9d22-82f226e7346d";
      fsType = "btrfs";
      options = [ "subvol=@snapshots" ];
    };

  fileSystems."/tmp" =
    { device = "/dev/disk/by-uuid/21cd3737-5f09-404f-9d22-82f226e7346d";
      fsType = "btrfs";
      options = [ "subvol=@tmp" ];
    };

  fileSystems."/swap" =
    { device = "/dev/disk/by-uuid/21cd3737-5f09-404f-9d22-82f226e7346d";
      fsType = "btrfs";
      options = [ "subvol=@swap" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/21cd3737-5f09-404f-9d22-82f226e7346d";
      fsType = "btrfs";
      options = [ "subvol=@boot" ];
    };

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/C8A4-6710";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [{ device = "/swap/swapfile"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eth0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
